Link :  https://leetcode.com/problems/subarray-sums-divisible-by-k/submissions/881360126/            



class Solution {
public:
    int subarraysDivByK(vector<int>& nums, int k) {
        int n=nums.size();   
        int ans=0;     
        int currSum=0;
        unordered_map<int,int> ump;
        ump[0]=1;
        for(int i=0;i<n;i++){
            currSum+=nums[i];
            int rem=(currSum)%k;
            if(rem<0) rem+=k;
            cout<<rem<<" ";
            ans+=ump[rem];
            ump[rem]++;
        }
        return ans;
    }
};
